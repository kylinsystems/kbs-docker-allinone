#!/bin/sh
#

if [ $IDEMPIERE_HOME ]; then
  cd $IDEMPIERE_HOME/utils
fi
. ./myEnvironment.sh
echo Import iDempiere - $IDEMPIERE_HOME \($TARGET_DB_NAME\)


echo == Start import seed database to target instance ==

echo Re-Create idempiere User and import $IDEMPIERE_HOME/data/seed/${DB_DUMP_FILE} - \($TARGET_DB_NAME\)
echo == The import will show warnings. This is OK ==
cd $IDEMPIERE_HOME/data/seed
cd ..
cd $IDEMPIERE_HOME/utils
ls -lsa $IDEMPIERE_HOME/data/seed/${DB_DUMP_FILE}

echo	Importing idempiere DB from $IDEMPIERE_HOME/data/seed/${DB_DUMP_FILE}

PGPASSWORD=$DB_SYSTEM
export PGPASSWORD

echo --------------------------------------------------------------------------
echo Create Default User : $TARGET_DB_USER and Seed Database : $TARGET_DB_NAME
echo --------------------------------------------------------------------------
echo "drop db $TARGET_DB_NAME"
dropdb -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -U $DB_SYSTEM $TARGET_DB_NAME
echo "drop user $TARGET_DB_USER"
dropuser -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -U $DB_SYSTEM $TARGET_DB_USER

echo "create role $TARGET_DB_USER"
SQL_STRING="CREATE ROLE $TARGET_DB_USER SUPERUSER LOGIN PASSWORD '$TARGET_DB_PASSWORD'"
psql -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -U $DB_SYSTEM -c "$SQL_STRING"

PGPASSWORD=$TARGET_DB_PASSWORD
export PGPASSWORD

echo "create db $TARGET_DB_NAME"
createdb  --template=template0 -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -E UNICODE -O $TARGET_DB_USER -U $TARGET_DB_USER $TARGET_DB_NAME

SQL_STRING="ALTER ROLE $TARGET_DB_USER IN DATABASE $TARGET_DB_NAME SET search_path TO $DB_SCHEMA, pg_catalog"
psql -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -d $TARGET_DB_NAME -U $TARGET_DB_USER -c "$SQL_STRING"
psql -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -d $TARGET_DB_NAME -U $TARGET_DB_USER -f $IDEMPIERE_HOME/data/seed/${DB_DUMP_FILE}


echo --------------------------------------------------------------------------
echo Create Readonly User : $TARGET_DB_USER_RO
echo --------------------------------------------------------------------------
SQL_STRING="CREATE ROLE $TARGET_DB_USER_RO WITH LOGIN PASSWORD '$TARGET_DB_PASSWORD_RO' NOSUPERUSER INHERIT NOCREATEDB NOCREATEROLE NOREPLICATION VALID UNTIL 'infinity'"
psql -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -d $TARGET_DB_NAME -U $TARGET_DB_USER -c "$SQL_STRING"

SQL_STRING="GRANT CONNECT ON DATABASE $TARGET_DB_NAME TO $TARGET_DB_USER_RO"
psql -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -d $TARGET_DB_NAME -U $TARGET_DB_USER -c "$SQL_STRING"

SQL_STRING="ALTER ROLE $TARGET_DB_USER_RO IN DATABASE $TARGET_DB_NAME SET search_path TO $DB_SCHEMA, pg_catalog"
psql -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -d $TARGET_DB_NAME -U $TARGET_DB_USER -c "$SQL_STRING"

SQL_STRING="GRANT USAGE ON SCHEMA $DB_SCHEMA TO $TARGET_DB_USER_RO"
psql -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -d $TARGET_DB_NAME -U $TARGET_DB_USER -c "$SQL_STRING"

SQL_STRING="GRANT SELECT ON ALL TABLES IN SCHEMA $DB_SCHEMA TO $TARGET_DB_USER_RO"
psql -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -d $TARGET_DB_NAME -U $TARGET_DB_USER -c "$SQL_STRING"

SQL_STRING="GRANT SELECT ON ALL SEQUENCES IN SCHEMA $DB_SCHEMA TO $TARGET_DB_USER_RO"
psql -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -d $TARGET_DB_NAME -U $TARGET_DB_USER -c "$SQL_STRING"

SQL_STRING="ALTER DEFAULT PRIVILEGES IN SCHEMA $DB_SCHEMA GRANT SELECT ON TABLES TO $TARGET_DB_USER_RO"
psql -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -d $TARGET_DB_NAME -U $TARGET_DB_USER -c "$SQL_STRING"


echo --------------------------------------------------------------------------
echo Create PGWatch User : $TARGET_DB_USER_PGWATCH
echo --------------------------------------------------------------------------
SQL_STRING="CREATE ROLE $TARGET_DB_USER_PGWATCH WITH LOGIN PASSWORD '$TARGET_DB_PASSWORD_PGWATCH' "
psql -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -d $TARGET_DB_NAME -U $TARGET_DB_USER -c "$SQL_STRING"

SQL_STRING="ALTER ROLE $TARGET_DB_USER_PGWATCH CONNECTION LIMIT 3"  
psql -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -d $TARGET_DB_NAME -U $TARGET_DB_USER -c "$SQL_STRING"

SQL_STRING="ALTER ROLE $TARGET_DB_USER_PGWATCH IN DATABASE $TARGET_DB_NAME SET search_path TO $DB_SCHEMA, pg_catalog"
psql -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -d $TARGET_DB_NAME -U $TARGET_DB_USER -c "$SQL_STRING"

SQL_STRING="GRANT pg_monitor TO $TARGET_DB_USER_PGWATCH"  
psql -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -d $TARGET_DB_NAME -U $TARGET_DB_USER -c "$SQL_STRING"

SQL_STRING="CREATE EXTENSION pg_stat_statements"  
psql -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -d $TARGET_DB_NAME -U $TARGET_DB_USER -c "$SQL_STRING"

SQL_STRING="CREATE EXTENSION plpython3u"  
psql -h $TARGET_DB_SERVER -p $TARGET_DB_PORT -d $TARGET_DB_NAME -U $TARGET_DB_USER -c "$SQL_STRING"

#Reset SQL
SQL_STRING=

#Reset PGPASSWORD
PGPASSWORD=
export PGPASSWORD

echo == End of inital target instance. ==